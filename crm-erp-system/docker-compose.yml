version: '3.8'

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: crm_erp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build: ./backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DB_NAME=crm_erp
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped

  celery:
    build: ./backend
    command: celery -A crm_erp worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DB_NAME=crm_erp
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped

  celery-beat:
    build: ./backend
    command: celery -A crm_erp beat -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DB_NAME=crm_erp
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
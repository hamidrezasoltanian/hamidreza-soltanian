# Generated by Django 5.2.6 on 2025-09-06 04:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0001_initial'),
        ('invoices', '0001_initial'),
        ('personnel', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_number', models.CharField(max_length=50, unique=True, verbose_name='شماره پیش\u200cفاکتور')),
                ('status', models.CharField(choices=[('draft', 'پیش\u200cنویس'), ('sent', 'ارسال شده'), ('accepted', 'پذیرفته شده'), ('rejected', 'رد شده'), ('expired', 'منقضی شده'), ('converted', 'تبدیل شده')], default='draft', max_length=20, verbose_name='وضعیت')),
                ('quotation_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاریخ پیش\u200cفاکتور')),
                ('valid_until', models.DateField(verbose_name='معتبر تا')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='جمع کل')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ تخفیف')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد تخفیف')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ مالیات')),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=9, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد مالیات')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ کل')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='یادداشت\u200cها')),
                ('terms_conditions', models.TextField(blank=True, null=True, verbose_name='شرایط و ضوابط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='personnel.personnel', verbose_name='شخص تماس')),
                ('converted_to_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='converted_from_quotation', to='invoices.invoice', verbose_name='تبدیل شده به فاکتور')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='customers.customer', verbose_name='مشتری')),
            ],
            options={
                'verbose_name': 'پیش\u200cفاکتور',
                'verbose_name_plural': 'پیش\u200cفاکتورها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='مقدار')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='قیمت واحد')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ تخفیف')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد تخفیف')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ مالیات')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ کل')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='محصول')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='invoices.quotation', verbose_name='پیش\u200cفاکتور')),
            ],
            options={
                'verbose_name': 'آیتم پیش\u200cفاکتور',
                'verbose_name_plural': 'آیتم\u200cهای پیش\u200cفاکتور',
                'ordering': ['quotation', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='مبلغ')),
                ('payment_method', models.CharField(choices=[('cash', 'نقدی'), ('bank_transfer', 'انتقال بانکی'), ('check', 'چک'), ('credit_card', 'کارت اعتباری'), ('installment', 'قسطی')], max_length=20, verbose_name='روش پرداخت')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاریخ پرداخت')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('completed', 'تکمیل شده'), ('failed', 'ناموفق'), ('cancelled', 'لغو شده')], default='completed', max_length=20, verbose_name='وضعیت')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='شماره مرجع')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام بانک')),
                ('check_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره چک')),
                ('check_date', models.DateField(blank=True, null=True, verbose_name='تاریخ چک')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='یادداشت\u200cها')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='invoices.invoice', verbose_name='فاکتور')),
            ],
            options={
                'verbose_name': 'پرداخت',
                'verbose_name_plural': 'پرداخت\u200cها',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['invoice'], name='invoices_pa_invoice_815bc8_idx'), models.Index(fields=['payment_date'], name='invoices_pa_payment_9bbb9c_idx'), models.Index(fields=['status'], name='invoices_pa_status_0c57ec_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='quotation',
            index=models.Index(fields=['quotation_number'], name='invoices_qu_quotati_cf9043_idx'),
        ),
        migrations.AddIndex(
            model_name='quotation',
            index=models.Index(fields=['customer'], name='invoices_qu_custome_667c9b_idx'),
        ),
        migrations.AddIndex(
            model_name='quotation',
            index=models.Index(fields=['status'], name='invoices_qu_status_2e26b0_idx'),
        ),
        migrations.AddIndex(
            model_name='quotation',
            index=models.Index(fields=['quotation_date'], name='invoices_qu_quotati_6a221d_idx'),
        ),
    ]

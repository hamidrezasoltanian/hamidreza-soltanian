# Generated by Django 5.2.6 on 2025-09-05 21:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('personnel', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='شماره فاکتور')),
                ('invoice_type', models.CharField(choices=[('sale', 'فروش'), ('return', 'مرجوعی'), ('credit', 'اعتباری')], default='sale', max_length=10, verbose_name='نوع فاکتور')),
                ('status', models.CharField(choices=[('draft', 'پیش\u200cنویس'), ('pending_approval', 'در انتظار تأیید'), ('approved', 'تأیید شده'), ('printed', 'چاپ شده'), ('cancelled', 'لغو شده'), ('paid', 'پرداخت شده')], default='draft', max_length=20, verbose_name='وضعیت')),
                ('payment_status', models.CharField(choices=[('unpaid', 'پرداخت نشده'), ('partial', 'پرداخت جزئی'), ('paid', 'پرداخت شده'), ('overpaid', 'پرداخت اضافی')], default='unpaid', max_length=15, verbose_name='وضعیت پرداخت')),
                ('invoice_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاریخ فاکتور')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='تاریخ سررسید')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='جمع کل')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ تخفیف')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد تخفیف')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ مالیات')),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=9, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد مالیات')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ کل')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ پرداخت شده')),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='مبلغ باقی\u200cمانده')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='یادداشت\u200cها')),
                ('terms_conditions', models.TextField(blank=True, null=True, verbose_name='شرایط و ضوابط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تأیید')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_invoices', to=settings.AUTH_USER_MODEL, verbose_name='تأیید شده توسط')),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='personnel.personnel', verbose_name='شخص تماس')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='customers.customer', verbose_name='مشتری')),
            ],
            options={
                'verbose_name': 'فاکتور',
                'verbose_name_plural': 'فاکتورها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='مقدار')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='قیمت واحد')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ تخفیف')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='درصد تخفیف')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ مالیات')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ کل')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='invoices.invoice', verbose_name='فاکتور')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='محصول')),
            ],
            options={
                'verbose_name': 'آیتم فاکتور',
                'verbose_name_plural': 'آیتم\u200cهای فاکتور',
                'ordering': ['invoice', 'sort_order'],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='invoices_in_invoice_e6b546_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['customer'], name='invoices_in_custome_bd64e2_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='invoices_in_status_cec546_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='invoices_in_invoice_087f87_idx'),
        ),
    ]

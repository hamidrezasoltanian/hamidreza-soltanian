# Generated by Django 5.2.6 on 2025-09-05 21:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100, verbose_name='نام بانک')),
                ('branch_name', models.CharField(max_length=100, verbose_name='نام شعبه')),
                ('account_number', models.CharField(max_length=50, verbose_name='شماره حساب')),
                ('account_type', models.CharField(choices=[('current', 'جاری'), ('savings', 'پس\u200cانداز'), ('deposit', 'سپرده'), ('credit', 'اعتباری')], default='current', max_length=10, verbose_name='نوع حساب')),
                ('account_holder', models.CharField(max_length=200, verbose_name='صاحب حساب')),
                ('iban', models.CharField(blank=True, max_length=34, null=True, verbose_name='شماره شبا')),
                ('currency', models.CharField(default='IRR', max_length=3, verbose_name='واحد پول')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='یادداشت\u200cها')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
            ],
            options={
                'verbose_name': 'حساب بانکی',
                'verbose_name_plural': 'حساب\u200cهای بانکی',
                'ordering': ['bank_name', 'account_number'],
            },
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام سال مالی')),
                ('start_date', models.DateField(verbose_name='تاریخ شروع')),
                ('end_date', models.DateField(verbose_name='تاریخ پایان')),
                ('is_active', models.BooleanField(default=False, verbose_name='سال فعال')),
                ('is_closed', models.BooleanField(default=False, verbose_name='بسته شده')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
            ],
            options={
                'verbose_name': 'سال مالی',
                'verbose_name_plural': 'سال\u200cهای مالی',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_code', models.CharField(max_length=10, unique=True, verbose_name='کد حساب')),
                ('account_name', models.CharField(max_length=200, verbose_name='نام حساب')),
                ('account_name_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='نام انگلیسی')),
                ('account_type', models.CharField(choices=[('asset', 'دارایی'), ('liability', 'بدهی'), ('equity', 'حقوق صاحبان سهام'), ('revenue', 'درآمد'), ('expense', 'هزینه')], max_length=10, verbose_name='نوع حساب')),
                ('balance_type', models.CharField(choices=[('debit', 'بدهکار'), ('credit', 'بستانکار')], max_length=10, verbose_name='نوع مانده')),
                ('level', models.PositiveIntegerField(default=1, verbose_name='سطح')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('is_leaf', models.BooleanField(default=True, verbose_name='حساب نهایی')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_accounts', to='accounting.chartofaccounts', verbose_name='حساب والد')),
            ],
            options={
                'verbose_name': 'کدینگ حسابداری',
                'verbose_name_plural': 'کدینگ حسابداری',
                'ordering': ['account_code'],
            },
        ),
        migrations.CreateModel(
            name='CostCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='کد مرکز هزینه')),
                ('name', models.CharField(max_length=200, verbose_name='نام مرکز هزینه')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_centers', to='accounting.costcenter', verbose_name='مرکز والد')),
            ],
            options={
                'verbose_name': 'مرکز هزینه',
                'verbose_name_plural': 'مراکز هزینه',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal_number', models.CharField(max_length=50, unique=True, verbose_name='شماره سند')),
                ('journal_type', models.CharField(choices=[('general', 'عمومی'), ('sales', 'فروش'), ('purchase', 'خرید'), ('cash', 'نقدی'), ('bank', 'بانکی'), ('inventory', 'انبار'), ('payroll', 'حقوق و دستمزد'), ('adjustment', 'تعدیل')], default='general', max_length=15, verbose_name='نوع سند')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='تاریخ سند')),
                ('description', models.TextField(verbose_name='شرح سند')),
                ('total_debit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مجموع بدهکار')),
                ('total_credit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مجموع بستانکار')),
                ('is_posted', models.BooleanField(default=False, verbose_name='ثبت شده')),
                ('reference_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='نوع مرجع')),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='شناسه مرجع')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('posted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ ثبت')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ایجاد شده توسط')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journals', to='accounting.fiscalyear', verbose_name='سال مالی')),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posted_journals', to=settings.AUTH_USER_MODEL, verbose_name='ثبت شده توسط')),
            ],
            options={
                'verbose_name': 'دفتر روزنامه',
                'verbose_name_plural': 'دفتر روزنامه',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='شرح')),
                ('debit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ بدهکار')),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ بستانکار')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts', verbose_name='حساب')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='accounting.journal', verbose_name='سند')),
            ],
            options={
                'verbose_name': 'آیتم دفتر روزنامه',
                'verbose_name_plural': 'آیتم\u200cهای دفتر روزنامه',
                'ordering': ['journal', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='تاریخ')),
                ('description', models.TextField(verbose_name='شرح')),
                ('debit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ بدهکار')),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مبلغ بستانکار')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='مانده')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='accounting.chartofaccounts', verbose_name='حساب')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='accounting.fiscalyear', verbose_name='سال مالی')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.journal', verbose_name='سند')),
            ],
            options={
                'verbose_name': 'دفتر کل',
                'verbose_name_plural': 'دفتر کل',
                'ordering': ['account', 'date'],
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مانده بدهکار')),
                ('credit_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='مانده بستانکار')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.chartofaccounts', verbose_name='حساب')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trial_balances', to='accounting.fiscalyear', verbose_name='سال مالی')),
            ],
            options={
                'verbose_name': 'تراز آزمایشی',
                'verbose_name_plural': 'تراز آزمایشی',
                'ordering': ['account'],
            },
        ),
        migrations.AddIndex(
            model_name='chartofaccounts',
            index=models.Index(fields=['account_code'], name='accounting__account_2e7f20_idx'),
        ),
        migrations.AddIndex(
            model_name='chartofaccounts',
            index=models.Index(fields=['account_type'], name='accounting__account_7d8a06_idx'),
        ),
        migrations.AddIndex(
            model_name='chartofaccounts',
            index=models.Index(fields=['parent_account'], name='accounting__parent__ed8825_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['journal_number'], name='accounting__journal_3d4188_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['fiscal_year'], name='accounting__fiscal__f85097_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['date'], name='accounting__date_03c825_idx'),
        ),
        migrations.AddIndex(
            model_name='journal',
            index=models.Index(fields=['is_posted'], name='accounting__is_post_7f1196_idx'),
        ),
        migrations.AddIndex(
            model_name='ledger',
            index=models.Index(fields=['account'], name='accounting__account_b0719d_idx'),
        ),
        migrations.AddIndex(
            model_name='ledger',
            index=models.Index(fields=['fiscal_year'], name='accounting__fiscal__2970f5_idx'),
        ),
        migrations.AddIndex(
            model_name='ledger',
            index=models.Index(fields=['date'], name='accounting__date_5a55e0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='trialbalance',
            unique_together={('fiscal_year', 'account')},
        ),
    ]
